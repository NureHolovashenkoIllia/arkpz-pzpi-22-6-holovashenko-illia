Міністерство освіти і науки України
Харківський національний університет радіоелектроніки

Кафедра програмної інженерії




ЗВІТ

до лабораторної роботи №5 з дисципліни
"Аналіз та рефакторинг коду"
на тему "Розгортання програмної системи та демонстрація її роботи"





Виконав:
ст. гр. ПЗПІ-22-6
Головашенко І. В.

Перевірив:
ст. викл. катедри ПІ
Сокорчук І. П.




Харків 2024
5. Розгортання програмної системи та демонстрація її роботи

5.1  Мета роботи: Метою даної роботи є розгортання програмної системи та демонстрація її роботи.

5.2  Хід роботи:

5.2.1 Розгорнути реалізовану програмну систему. Перевірити та налаштувати роботу розгорнутої програмної системи.
1) Налаштування бази даних у Google Cloud
  Після авторизації у обліковому записі Google Cloud та відкриття Google Cloud Console створив новий проєкт для розгортання інфраструктури. Проєкт заздалегідь підготував для розгортання необхідної іфраструктури.
  У консолі обрав сервіс Cloud SQL, який забезпечує керовану платформу для роботи з базами даних. Цей сервіс підтримує популярні системи управління базами даних, такі як MySQL, PostgreSQL та SQL Server, і дозволяє інтегрувати базу даних із додатками, забезпечуючи високу надійність.
  Для створення нового інстансу бази даних було виконано наступні дії:
  Натиснуто кнопку «Create Instance» (Створити інстанс) і налаштовано основні параметри:
* Тип бази даних: обрано MySQL відповідно до технічних вимог додатка.
* Назва інстансу: інстансу присвоєно унікальне ім'я, «flameguarddb».
* Регіон і зона: обрано найближчий регіон до користувачів або інфраструктури (europe-central2) для мінімізації затримок.
* Тарифний план: обрано конфігурацію Production, оптимальний для малих додатків.
* Обсяг пам'яті: пам'ять встановлено опцією автоматичного масштабування, щоб врахувати можливе збільшення навантаження.
Налаштовано додаткові параметри інстансу:
* Версія СУБД: обрано актуальну стабільну версію MySQL.
* Адміністративний обліковий запис: створено користувача root із надійним паролем для безпечного доступу.
* Автоматичне резервне копіювання: увімкнено для забезпечення відновлення даних у разі непередбачених ситуацій.
* Шифрування: активовано функцію шифрування даних за допомогою ключів, що управляються Google (Customer Managed Encryption Keys).














     Після активації інстансу в Cloud SQL було відкрито Cloud Shell, де виконано налаштування підключення до локальної MySQL-бази даних. У рамках цього процесу створено нову базу даних «FlameGuard», яка використовується як основне сховище для таблиць додатка.

2) Деплой розробленого проєкту у Google Cloud
  Для розгортання додатка використав вихідний код із репозиторію Git. Код клонував за допомогою наступної команди:
   git clone https://github.com/NureHolovashenkoIllia/arkpz-pzpi-22-6-holovashenko-illia

  Після клонування здійснено перехід у відповідну директорію проєкту:
   cd C:\Users\f4ily\IdeaProjects\arkpz-pzpi-22-6-holovashenko-illia\Task5\arkpz-pzpi-22-6-holovashenko-illia-task5

  Для збірки проєкту використовувався інструмент Maven, який забезпечує автоматичне управління залежностями через файл pom.xml. Завантаження необхідних залежностей та збірку JAR-файлу здійснив за допомогою команди:
   mvn clean install –DskipTests

  Для перевірки коректності збірки переконався в наявності створеного файлу за допомогою команди:
   ls target/FlameGuard-0.0.1-SNAPSHOT.jar

  Перед розгортанням у хмарному середовищі виконано локальний запуск для перевірки працездатності додатка:
   java -jar target/FlameGuard-0.0.1-SNAPSHOT.jar

  Після успішної перевірки розгорнув додаток в Google Cloud, використовуючи команду:
   gcloud app deploy FlameGuard-0.0.1-SNAPSHOT.jar

3) Налаштування міграції даних у Google Cloud
  Міграція даних у Google Cloud є важливим етапом, який передбачає перенесення даних із локальних середовищ до хмарної платформи Google Cloud. Це забезпечило зручність в управлінні даними, підвищило їх доступність і масштабованість. Для забезпечення міграції з бази даних було створено спеціальну команду, яка виконує конвертацію даних з локальної бази даних в таблиці CSV. Приклад команди для таблиці User_account:
   bcp "SELECT * FROM [%DATABASE_NAME%].[dbo].[User_account]" queryout "%OUTPUT_DIR%\\User_account.csv" -c -t, -T -S %SERVER_NAME%


   Вміст файлу User_account.csv зображено на рисунку 5.3.
   Для передачі даних створив Cloud Storage Bucket (flameguard-database-backup) зі стандартним класом зберігання для завантаження CSV-файлів. Завантажив файли у бакет, а потім імпортував їх у базу даних через раніше створений інстанс Cloud SQL. Імпорт даних з CSV-файлу User_account.csv до бази FlameGuard зображено на рисунку 5.4.






5.3  Висновок: В ході виконання лабораторної роботи я розгорнув програмну систему та продемонстрував її роботу.
Посилання на GitHub репозиторій: https://github.com/NureHolovashenkoIllia/arkpz-pzpi-22-6-holovashenko-illia/tree/main/Task5
Посилання на YouTube відео: https://youtu.be/Mtne3YYWVSE